trouver un meilleur moyen de sélectionner les joueurs 
gestion des joueurs et tirage des équipes en fonction des joueurs ====> refaire tous le team_registering
    finir la partie aléatoire ====> optimiser lebloc avec les tickboxs
        faire le dictionnaire avec le nombre de rangée par colonne 
prévenvir que quand on clique dans une colonne déjà rempli dans la première colonne, si on n'avait pas envie de cliquer deux fois sur le joueur de la seconde colonne, bah pas le choix 

clear tous les commentaires inutiles
rajouter les noms des équipes avec noms de famille
ajout suppression de ligne 
réparer la création d'équipes + ajouter les équipes au classement quand elle sont enregistré
finir le main avec les signaux
des îcones dans le mainwindow
erreur personnalisé
error_gui aussi (dans old_competition)
+++++ faire l'index courant de competition (normalement c'est fait)
ajouter la génération automatique des noms de compétition dans le new_competition.py

faire en sorte que les tableau prennent toutes la places dans les fenêtres
corriger arborescence pour team_registering notamment
ajouter des QGroupBox un peu partout car c plus classe 

finir register match dans le database_handler avec le dictionnaire

optimisation  :
- enregistrement des équipes :
    - enregistrer réellement les équipes dans la base de donnée et dans le classement général
    - ajout manuel synchro avec l'ajout auto
- tirage : 
    - algo : fonction avec les bons paramètres
    - créer les matchs
- erroGui : 
    - faire une classe qui prend pour arguments un message et qui s'adapte en conséquence 
- enregistrement des résultats :
    - enregistrer le tableau des scores à la place des lineEdit
    - ajouter un peu plus d'espace
- essayer de faire un décorateur pour le tirage
- database_handler :
    - pour tous les SELECT faire des arguments pour faire en sorte que une seule fonction pour toutes
    - pareil pour les autres enregistrements
    - optimiser les connections sqlite
=====> demander à ChatGPT des conseils il est très bon

ATTENTION AUX con.commit()

saized_result_gui -> comlètement adapté aux nouvelles classes
draw_gui -> adaptation faite, reste tirage par classement